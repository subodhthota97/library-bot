!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.MatterMostClient=t():e.MatterMostClient=t()}(this,(function(){return e={754:(e,t,s)=>{const n=s(873),i=s(796),o=s(151),r=s(775),{EventEmitter:h}=s(702),a=s(229),l=s(189),c=s(384),g="/api/v4",d=!(process.env.MATTERMOST_TLS_VERIFY||"").match(/^false|0|no|off$/i),u=!(process.env.MATTERMOST_USE_TLS||"").match(/^false|0|no|off$/i);class p extends h{constructor(e,t,s){super(),this.host=e,this.group=t,this.options=s||{wssPort:443,httpPort:80},this.authenticated=!1,this.connected=!1,this.personalAccessToken=!1,this.token=null,this.self=null,this.channels={},this.users={},this.teams={},this.teamID=null,this.ws=null,this._messageID=0,this._pending={},this._pingInterval=null!=this.options.pingInterval?this.options.pingInterval:6e4,this.autoReconnect=null==this.options.autoReconnect||this.options.autoReconnect,this.httpProxy=null!=this.options.httpProxy&&this.options.httpProxy,this._connecting=!1,this._reconnecting=!1,this._connAttempts=0,this.logger=this.options.logger||r,this._onLogin=this._onLogin.bind(this),this._onLoadUsers=this._onLoadUsers.bind(this),this._onLoadUser=this._onLoadUser.bind(this),this._onChannels=this._onChannels.bind(this),this._onPreferences=this._onPreferences.bind(this),this._onMe=this._onMe.bind(this),this._onTeams=this._onTeams.bind(this)}login(e,t,s){return this.personalAccessToken=!1,this.email=e,this.password=t,this.mfaToken=s,this.logger.info("Logging in..."),this._apiCall("POST","/users/login",{login_id:this.email,password:this.password,token:this.mfaToken},this._onLogin)}tokenLogin(e){return this.token=e,this.personalAccessToken=!0,this.logger.info("Logging in with personal access token..."),this._apiCall("GET","/users/me",null,this._onLogin)}_onLogin(e,t){return e?e.id?(this.authenticated=!0,this.personalAccessToken||(this.token=t.token),this.socketUrl=this._getSocketUrl(),this.logger.info("Websocket URL: %s",this.socketUrl),this.self=new l(e),this.emit("loggedIn",this.self),this.getMe(),this.getPreferences(),this.getTeams()):(this.logger.error("Login call failed %j",e),this.authenticated=!1,this._reconnecting=!1,this.reconnect()):(this.emit("error",e),this.authenticated=!1,this.reconnect())}_getSocketUrl(){const e=u?"wss://":"ws://",t=this.options.httpPort?`:${this.options.httpPort}`:"",s=u&&this.options.wssPort?`:${this.options.wssPort}`:t;return`${e+this.host+s+g}/websocket`}_onLoadUsers(e,t,s){if(e&&!e.error){e.forEach((e=>{this.users[e.id]=e})),this.logger.info("Found %d profiles.",Object.keys(e).length);const t=this.emit("profilesLoaded",e);return Object.keys(e).length>0&&null!=s.page?this.loadUsers(s.page+1):t}return this.logger.error("Failed to load profiles from server."),this.emit("error",{msg:"failed to load profiles"})}_onLoadUser(e,t,s){return!(!e||e.error)&&(this.users[e.id]=e,this.emit("profilesLoaded",[e]))}_onChannels(e,t,s){return e&&!e.error?(e.forEach((e=>{this.channels[e.id]=e})),this.logger.info("Found %d subscribed channels.",Object.keys(e).length),this.emit("channelsLoaded",e)):(this.logger.error("Failed to get subscribed channels list from server: %j",e.error),this.emit("error",{msg:"failed to get channel list"}))}_onPreferences(e,t,s){return e&&!e.error?(this.preferences=e,this.emit("preferencesLoaded",e),!0):(e&&e.error?this.logger.error("Failed to load Preferences... %j",e.error):this.logger.error("Failed to load Preferences unexpected data... %j",e),!1)}_onMe(e,t,s){return e&&!e.error?(this.me=e,this.emit("meLoaded",e),this.logger.info("Loaded Me...")):(this.logger.error("Failed to load Me... %j",e.error),this.reconnect())}_onTeams(e,t,s){if(e&&!e.error){this.teams=e,this.emit("teamsLoaded",e),this.logger.info("Found %d teams.",Object.keys(this.teams).length);for(const e of this.teams)if(this.logger.debug("Testing %s == %s",e.name,this.group),e.name.toLowerCase()===this.group.toLowerCase()){this.logger.info("Found team: %s",e.id),this.teamID=e.id;break}return this.loadUsers(),this.loadChannels(),this.connect()}return this.logger.error("Failed to load Teams..."),this.reconnect()}channelRoute(e){return`${this.teamRoute()}/channels/${e}`}teamRoute(){return`/users/me/teams/${this.teamID}`}getMe(){const e="/users/me";return this.logger.debug("Loading %s",e),this._apiCall("GET",e,null,this._onMe)}getPreferences(){try{const e="/users/me/preferences";return this.logger.debug("Loading %s",e),this._apiCall("GET",e,null,this._onPreferences)}catch(e){return this.preferences={},this.logger.warning("Unable to load preferences !"),!1}}getTeams(){const e="/users/me/teams";return this.logger.debug("Loading %s",e),this._apiCall("GET",e,null,this._onTeams)}loadUsers(e=0){const t=`/users?page=${e}&per_page=200&in_team=${this.teamID}`;return this.logger.debug("Loading %s",t),this._apiCall("GET",t,null,this._onLoadUsers,{page:e})}loadUser(e){const t=`/users/${e}`;return this.logger.debug("Loading %s",t),this._apiCall("GET",t,null,this._onLoadUser,{})}loadChannels(){const e=`/users/me/teams/${this.teamID}/channels`;return this.logger.debug("Loading %s",e),this._apiCall("GET",e,null,this._onChannels)}connect(){if(this._connecting)return;this._connecting=!0,this.logger.info("Connecting...");const e={rejectUnauthorized:d};this.httpProxy&&(e.agent=new a(this.httpProxy)),this.ws&&(this.ws.close(),this.ws=null),this.ws=new i(this.socketUrl,e),this.ws.on("error",(e=>(this._connecting=!1,this.emit("error",e)))),this.ws.on("open",(()=>{this._connecting=!1,this._reconnecting=!1,this.connected=!0,this.emit("connected"),this._connAttempts=0,this._lastPong=Date.now();const e={action:"authentication_challenge",data:{token:this.token}};return this.logger.info("Sending challenge..."),this._send(e),this.logger.info("Starting pinger..."),this._pongTimeout=setInterval((()=>this.connected?null!=this._lastPong&&Date.now()-this._lastPong>2*this._pingInterval?(this.logger.error("Last pong is too old: %d",(Date.now()-this._lastPong)/1e3),this.authenticated=!1,this.connected=!1,void this.reconnect()):(this.logger.debug("ping"),void this._send({action:"ping"})):(this.logger.error("Not connected in pongTimeout"),void this.reconnect())),this._pingInterval),!0})),this.ws.on("message",((e,t)=>this.onMessage(JSON.parse(e)))),this.ws.on("close",((e,t)=>(this.emit("close",e,t),this._connecting=!1,this.connected=!1,this.socketUrl=null,!this.autoReconnect||this.reconnect())))}reconnect(){if(this._reconnecting)return this.logger.info("WARNING: Already reconnecting."),!1;this._connecting=!1,this._reconnecting=!0,this._pongTimeout&&(clearInterval(this._pongTimeout),this._pongTimeout=null),this.authenticated=!1,this.ws&&this.ws.close(),this._connAttempts+=1;const e=1e3*this._connAttempts;return this.logger.info("Reconnecting in %dms",e),setTimeout((()=>(this.logger.info("Attempting reconnect"),this.personalAccessToken?this.tokenLogin(this.token):this.login(this.email,this.password,this.mfaToken))),e)}disconnect(){return!!this.connected&&(this.autoReconnect=!1,this._pongTimeout&&(clearInterval(this._pongTimeout),this._pongTimeout=null),this.ws.close(),!0)}onMessage(e){this.emit("raw_message",e);const t=new c(e);switch(e.event){case"ping":return this.logger.debug("ACK ping"),this._lastPong=Date.now(),this.emit("ping",e);case"posted":return this.emit("message",t);case"added_to_team":case"authentication_challenge":case"channel_converted":case"channel_created":case"channel_deleted":case"channel_member_updated":case"channel_updated":case"channel_viewed":case"config_changed":case"delete_team":case"ephemeral_message":case"hello":case"typing":case"post_edit":case"post_deleted":case"preference_changed":case"user_added":case"user_removed":case"user_role_updated":case"user_updated":case"status_change":case"webrtc":return this.emit(e.event,e);case"new_user":return this.loadUser(e.data.user_id),this.emit("new_user",e);default:return(e.data?e.data.text:void 0)&&"pong"===e.data.text?(this.logger.debug("ACK ping (2)"),this._lastPong=Date.now(),this.emit("ping",e)):(this.logger.debug("Received unhandled message:"),this.logger.debug(e))}}getUserByID(e){return this.users[e]}getUserByEmail(e){const t=Object.keys(this.users).find((t=>this.users[t].email===e));return this.users[t]||null}getUserDirectMessageChannel(e,t){let s=`${this.self.id}__${e}`;s=this.findChannelByName(s),s||(s=`${e}__${this.self.id}`,s=this.findChannelByName(s)),s?null!=t&&t(s):this.createDirectChannel(e,t)}getAllChannels(){return this.channels}getChannelByID(e){return this.channels[e]}customMessage(e,t){const s={...e};let n;return null!=s.message&&(n=p._chunkMessage(s.message),s.message=n.shift()),s.channel_id=t,this._apiCall("POST","/posts",s,((e,i)=>(this.logger.debug("Posted custom message."),!((null!=n?n.length:void 0)>0)||(this.logger.debug("Recursively posting remainder of customMessage: (%d)",n.length),s.message=n.join(),this.customMessage(s,t)))))}dialog(e,t,s){const n={trigger_id:e,url:t,dialog:s};return this._apiCall("POST","/actions/dialogs/open",n,((e,t)=>{this.logger.debug("Created dialog")}))}editPost(e,t){let s=t;return"string"==typeof t&&(s={id:e,message:t}),this._apiCall("PUT",`/posts/${e}`,s,((e,t)=>{this.logger.debug("Edited post")}))}uploadFile(e,t,s){const n={channel_id:e,files:t};return this._apiCall({method:"POST"},"/files",n,((e,t)=>(this.logger.debug("Posted file"),s(e))))}react(e,t){const s={user_id:this.self.id,post_id:e,emoji_name:t,create_at:0};return this._apiCall("POST","/reactions",s,((e,t)=>{this.logger.debug("Created reaction")}))}unreact(e,t){const s=`/users/me/posts/${e}/reactions/${t}`;return this._apiCall("DELETE",s,[],((e,t)=>{this.logger.debug("Deleted reaction")}))}createDirectChannel(e,t){const s=[e,this.self.id];return this._apiCall("POST","/channels/direct",s,((e,s)=>(this.logger.info("Created Direct Channel."),null!=t?t(e):null)))}findChannelByName(e){const t=Object.keys(this.channels).find((t=>{const s=this.channels[t].name===e,n=this.channels[t].display_name===e;return s||n}));return this.channels[t]||null}static _chunkMessage(e){if(!e)return[""];let t=[];return t=e.match(new RegExp("(.|[\r\n]){1,4000}","g")),t}postMessage(e,t){const s={message:e,file_ids:[],create_at:0,user_id:this.self.id,channel_id:t};"string"==typeof e?s.message=e:(s.message=e.message,e.props&&(s.props=e.props),e.file_ids&&(s.file_ids=e.file_ids));const n=p._chunkMessage(s.message);return s.message=n.shift(),this._apiCall("POST","/posts",s,((e,s)=>(this.logger.debug("Posted message."),!((null!=n?n.length:void 0)>0)||(this.logger.debug("Recursively posting remainder of message: (%d)",null!=n?n.length:void 0),this.postMessage(n.join(),t)))))}postCommand(e,t){const s={command:t,channel_id:e};return this._apiCall("POST","/commands/execute",s,((e,t)=>(this.logger.debug("Run command."),!0)))}setChannelHeader(e,t){const s={channel_id:e,channel_header:t};return this._apiCall("POST",`${this.teamRoute()}/channels/update_header`,s,((e,t)=>(this.logger.debug("Channel header updated."),!0)))}_send(e){const t={...e};return!!this.connected&&(this._messageID+=1,t.id=this._messageID,t.seq=t.id,this._pending[t.id]=t,this.ws.send(JSON.stringify(t)),t)}_apiCall(e,t,s,i,r){const h=r||{};let a=!1,l=e;"string"!=typeof e&&(a=!0,l=e.method);let c="";null!=s&&(c=JSON.stringify(s));const p={uri:(u?"https://":"http://")+this.host+(null!=this.options.httpPort?`:${this.options.httpPort}`:"")+g+t,method:l,json:s,rejectUnauthorized:d,headers:{"Content-Type":"application/json","Content-Length":new o.TextEncoder("utf-8").encode(c).length,"X-Requested-With":"XMLHttpRequest"}};return this.token&&(p.headers.Authorization=`BEARER ${this.token}`),this.httpProxy&&(p.proxy=this.httpProxy),a&&(p.headers["Content-Type"]="multipart/form-data",delete p.headers["Content-Length"],delete p.json,p.formData=s),this.logger.debug("%s %s",l,t),this.logger.debug("api url: %s",p.uri),n(p,((e,t,s)=>{if(e){if(i)return i({id:null,error:e.errno},{},h)}else if(i){if(200===t.statusCode||201===t.statusCode){const e="string"==typeof s?JSON.parse(s):s;return i(e,t.headers,h)}return i({id:null,error:`API response: ${t.statusCode} ${JSON.stringify(s)}`},t.headers,h)}return null}))}}e.exports=p},384:e=>{e.exports=class{constructor(e={}){Object.keys(e).forEach((t=>{this[t]=e[t]}))}}},189:e=>{e.exports=class{constructor(e={}){Object.keys(e).forEach((t=>{this[t]=e[t]}))}}},702:e=>{"use strict";e.exports=require("events")},229:e=>{"use strict";e.exports=require("https-proxy-agent")},775:e=>{"use strict";e.exports=require("log")},873:e=>{"use strict";e.exports=require("request")},151:e=>{"use strict";e.exports=require("text-encoding")},796:e=>{"use strict";e.exports=require("ws")}},t={},function s(n){var i=t[n];if(void 0!==i)return i.exports;var o=t[n]={exports:{}};return e[n](o,o.exports,s),o.exports}(754);var e,t}));